// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`write-tree no categories should write an empty readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, no page with image should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

<img src=\\"./category.png\\" alt=\\"A screenshot of the Category\\"
  width=\\"740\\" height=\\"80\\" style=\\"height: auto\\" />

> Category description.

"
`;

exports[`write-tree one category, no page with image should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, one page with image example should write a category/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: bool

## Set to \`true\` (default value)
\`\`\`bash
defaults write com.apple.category page -bool true
\`\`\`
<img
  src=\\"./category-page-true.png\\"
  alt=\\"Example output with value set to true\\"
  width=\\"600\\" height=\\"400\\" style=\\"height: auto\\"
/>


## Set to \`false\`
\`\`\`bash
defaults write com.apple.category page -bool false
\`\`\`
<img
  src=\\"./category-page-false.png\\"
  alt=\\"Example output with value set to false\\"
  width=\\"400\\" height=\\"200\\" style=\\"height: auto\\"
/>


## Read current value
\`\`\`bash
defaults read com.apple.category page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page
\`\`\`
"
`;

exports[`write-tree one category, one page with image example should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page](./page.html)
"
`;

exports[`write-tree one category, one page with image example should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page](./category/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, one page with text and possible values example should write a category/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: string
  * start
  * middle
  * end

## Set to \`start\`
\`\`\`bash
defaults write com.apple.category page -string start
\`\`\`

- output when value is start

## Set to \`middle\` (default value)
\`\`\`bash
defaults write com.apple.category page -string middle
\`\`\`

- output when value is middle

## Set to \`end\`
\`\`\`bash
defaults write com.apple.category page -string end
\`\`\`

- output when value is end

## Read current value
\`\`\`bash
defaults read com.apple.category page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page
\`\`\`
"
`;

exports[`write-tree one category, one page with text and possible values example should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page](./page.html)
"
`;

exports[`write-tree one category, one page with text and possible values example should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page](./category/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, one page with text example with an after command should write a category/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: string

## Set to \`~/Desktop\` (default value)
\`\`\`bash
defaults write com.apple.category page -string ~/Desktop && killall App
\`\`\`

- output when value is ~/Desktop

## Set to \`~/Pictures\`
\`\`\`bash
defaults write com.apple.category page -string ~/Pictures && killall App
\`\`\`

- output when value is ~/Pictures

## Read current value
\`\`\`bash
defaults read com.apple.category page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page && killall App
\`\`\`
"
`;

exports[`write-tree one category, one page with text example with an after command should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page](./page.html)
"
`;

exports[`write-tree one category, one page with text example with an after command should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page](./category/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, one page with text example with requirements should write a category/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: string

## Requirements
- [\`com.apple.category2 another-key\`](../../another-category/another-key.html#set-to-true) must be set to \`true\`
- [\`com.apple.category2 a-third-key\`](../../a-third-category/a-third-key.html#set-to-0.5) must be set to \`0.5\`

## Set to \`true\` (default value)
\`\`\`bash
defaults write com.apple.category page -string true && killall App
\`\`\`

- output when value is true

## Set to \`false\`
\`\`\`bash
defaults write com.apple.category page -string false && killall App
\`\`\`

- output when value is false

## Read current value
\`\`\`bash
defaults read com.apple.category page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page && killall App
\`\`\`
"
`;

exports[`write-tree one category, one page with text example with requirements should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page](./page.html)
"
`;

exports[`write-tree one category, one page with text example with requirements should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page](./category/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, one page with text example with special chars values should write a category/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: bool

## Set to \`~/Desktop\` (default value)
\`\`\`bash
defaults write com.apple.category page -bool ~/Desktop
\`\`\`

- output when value is ~/Desktop

## Set to \`~/Pictures\`
\`\`\`bash
defaults write com.apple.category page -bool ~/Pictures
\`\`\`

- output when value is ~/Pictures

## Read current value
\`\`\`bash
defaults read com.apple.category page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page
\`\`\`
"
`;

exports[`write-tree one category, one page with text example with special chars values should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page](./page.html)
"
`;

exports[`write-tree one category, one page with text example with special chars values should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page](./category/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, one page with video example should write a category/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: float

## Set to \`0\` (default value)
\`\`\`bash
defaults write com.apple.category page -float 0
\`\`\`
<video autoplay loop muted playsinline width=\\"750\\" height=\\"400\\" style=\\"max-width: 100%; height: auto\\">
  <source src=\\"./category-page-0.mp4\\" type=\\"video/mp4\\">
  Example output with value set to 0
</video>


## Set to \`0.5\`
\`\`\`bash
defaults write com.apple.category page -float 0.5
\`\`\`
<video autoplay loop muted playsinline width=\\"720\\" height=\\"390\\" style=\\"max-width: 100%; height: auto\\">
  <source src=\\"./category-page-0.5.mp4\\" type=\\"video/mp4\\">
  Example output with value set to 0.5
</video>


## Read current value
\`\`\`bash
defaults read com.apple.category page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page
\`\`\`
"
`;

exports[`write-tree one category, one page with video example should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page](./page.html)
"
`;

exports[`write-tree one category, one page with video example should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page](./category/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree one category, two pages should write a category/page1.md file using the page template 1`] = `
"---
metaTitle: \\"Page 1 | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page 1\\"
  - name: \\"description\\"
    content: \\"Page 1 description.\\"
  - property: \\"og:description\\"
    content: \\"Page 1 description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page 1

> Page 1 description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: bool

## Set to \`true\` (default value)
\`\`\`bash
defaults write com.apple.category page1 -bool true
\`\`\`

- output when value is true

## Set to \`false\`
\`\`\`bash
defaults write com.apple.category page1 -bool false
\`\`\`

- output when value is false

## Read current value
\`\`\`bash
defaults read com.apple.category page1
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page1
\`\`\`
"
`;

exports[`write-tree one category, two pages should write a category/page2.md file using the page template 1`] = `
"---
metaTitle: \\"Page 2 | Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category > Page 2\\"
  - name: \\"description\\"
    content: \\"Page 2 description.\\"
  - property: \\"og:description\\"
    content: \\"Page 2 description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page 2

> Page 2 description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: bool

## Set to \`true\`
\`\`\`bash
defaults write com.apple.category page2 -bool true
\`\`\`

- output when value is true

## Set to \`false\` (default value)
\`\`\`bash
defaults write com.apple.category page2 -bool false
\`\`\`

- output when value is false

## Read current value
\`\`\`bash
defaults read com.apple.category page2
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category page2
\`\`\`
"
`;

exports[`write-tree one category, two pages should write a category/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category\\"
  - name: \\"description\\"
    content: \\"Category description.\\"
  - property: \\"og:description\\"
    content: \\"Category description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category

> Category description.

- [Page 1](./page1.html)
- [Page 2](./page2.html)
"
`;

exports[`write-tree one category, two pages should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category
- [Page 1](./category/page1.html)
- [Page 2](./category/page2.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;

exports[`write-tree two categories, one page in each should write a category1/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category 1 | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category 1 > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: bool

## Set to \`true\` (default value)
\`\`\`bash
defaults write com.apple.category1 page -bool true
\`\`\`

- output when value is true

## Set to \`false\`
\`\`\`bash
defaults write com.apple.category1 page -bool false
\`\`\`

- output when value is false

## Read current value
\`\`\`bash
defaults read com.apple.category1 page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category1 page
\`\`\`
"
`;

exports[`write-tree two categories, one page in each should write a category1/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category 1 | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category 1\\"
  - name: \\"description\\"
    content: \\"Category 1 description.\\"
  - property: \\"og:description\\"
    content: \\"Category 1 description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category 1

> Category 1 description.

- [Page](./page.html)
"
`;

exports[`write-tree two categories, one page in each should write a category2/page.md file using the page template 1`] = `
"---
metaTitle: \\"Page | Category 2 | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category 2 > Page\\"
  - name: \\"description\\"
    content: \\"Page description.\\"
  - property: \\"og:description\\"
    content: \\"Page description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Page

> Page description.

- **Tested on macOS**:
  * Big Sur
- **Parameter type**: bool

## Set to \`true\`
\`\`\`bash
defaults write com.apple.category2 page -bool true
\`\`\`

- output when value is true

## Set to \`false\` (default value)
\`\`\`bash
defaults write com.apple.category2 page -bool false
\`\`\`

- output when value is false

## Read current value
\`\`\`bash
defaults read com.apple.category2 page
\`\`\`

## Delete current value
\`\`\`bash
defaults delete com.apple.category2 page
\`\`\`
"
`;

exports[`write-tree two categories, one page in each should write a category2/readme.md file using the category template 1`] = `
"---
metaTitle: \\"Category 2 | macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"macOS defaults > Category 2\\"
  - name: \\"description\\"
    content: \\"Category 2 description.\\"
  - property: \\"og:description\\"
    content: \\"Category 2 description.\\"
  - property: \\"twitter:card\\"
    content: \\"summary\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-1x1.jpg\\"
---
# Category 2

> Category 2 description.

- [Page](./page.html)
"
`;

exports[`write-tree two categories, one page in each should write a readme.md file using the home template 1`] = `
"---
metaTitle: \\"macOS defaults\\"
meta:
  - property: \\"og:title\\"
    content: \\"A list of macOS defaults commands with demos ✨\\"
  - name: \\"description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"og:description\\"
    content: \\"You've already copied \`defaults write\` commands. Sometimes you don't know what they do and are not sure they still work. This list of macOS defaults commands is here to help.\\"
  - property: \\"twitter:card\\"
    content: \\"summary_large_image\\"
  - property: \\"twitter:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.webp\\"
  - property: \\"og:image\\"
    content: \\"https://inspiring-hopper-66c5ab.netlify.app/media-2x1.jpg\\"
---
# macOS \`defaults\` list
Uncomplete list of macOS \`defaults\` commands with demos ✨

## 🙋 What's a \`defaults\` command?

<div class=\\"custom-block tip\\">
  <p>
    <em>macOS applications and other programs</em> use the <code>defaults</code> system to record user preferences and other information to be maintained when the application isn't running (font for new documents, or the position of an Info panel).
    Much of this information is accessible through an application's Preferences panel but sometimes they're hidden.
  </p>
  <p>
    User defaults belong to <strong>domains</strong>, which typically correspond to individual applications.
    Applications, system services, and other programs have their own domains, they also share a domain named <strong>NSGlobalDomain</strong>.
    If a default isn't specified in the application's domain, it may be specified in NSGlobalDomain.
  </p>
  <p>
    Each domain has a dictionary of keys and values representing its defaults; e.g. <strong>\\"Default Font\\" = \\"Helvetica\\"</strong>.
    <strong>Keys</strong> are strings, <strong>values</strong> can be complex data structures comprising arrays,
    dictionaries, strings, and binary data. They're stored as XML Property List.
  </p>
  <p>The <code>defaults</code> command line interface is a way to interact with these values.</p>
</div>

**Source: [Real-World-Systems](http://www.real-world-systems.com/docs/defaults.1.html)**

### Command line interface basics
#### Print the help
\`\`\`bash
defaults help
\`\`\`

#### List all domains
\`\`\`bash
defaults domains
\`\`\`

#### List all entries containing *word*
\`\`\`bash
defaults search \${word}
\`\`\`

#### Show the type for the given *domain*, *key*
\`\`\`bash
defaults read-type \${domain} \${key}
\`\`\`

#### Rename *old_key* to *new_key*
\`\`\`bash
defaults rename \${domain} \${old_key} \${new_key}
\`\`\`

## 💻 List of commands
### Category 1
- [Page](./category1/page.html)

### Category 2
- [Page](./category2/page.html)

## 🤔 How do I add a command?
The list will soon be open sourced! You'll always be welcome to submit PRs, until then reach me on
[Twitter](http://twitter.com/_YannBertrand).

## ❤️ I like this website, how can I build the same?
Thank you! I built it using [VuePress](https://vuepress.vuejs.org/). I liked the experience a lot.
"
`;
